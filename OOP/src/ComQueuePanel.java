import javax.swing.*;
import java.awt.Font;
import java.io.File;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author armmy
 */
public class ComQueuePanel extends javax.swing.JPanel implements Updater{

    /**
     * Creates new form ComQueuePanel
     */
    public ComQueuePanel(Computer comp) {
        this.comp = comp;
        initComponents();
        updateButtonIcon();
        try{
            File fontStyle_apple = new File("OOP/src/Font/Big Apple 3PM.ttf");
            File fontStyle_minecraft = new File("OOP/src/Font/minecraft_font.ttf");
            Font font_info = Font.createFont(Font.TRUETYPE_FONT,fontStyle_minecraft).deriveFont(10f);
            Font font_status = Font.createFont(Font.TRUETYPE_FONT,fontStyle_minecraft).deriveFont(10f);
            seat_txt.setFont(font_info);
            lab_txt.setFont(font_info);
            name_id.setFont(font_info);
//            checking_l.setFont(font_status);
//            wait_l.setFont(font_status);
//            empty_l.setFont(font_status);

        }catch(Exception e){
            e.printStackTrace();

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        info_p = new javax.swing.JPanel();
        lab_txt = new javax.swing.JLabel();
        seat_txt = new javax.swing.JLabel();
        name_id = new javax.swing.JLabel();
        image_status = new javax.swing.JLabel();

        info_p.setOpaque(false);

        lab_txt.setBackground(new java.awt.Color(255, 244, 204));
        lab_txt.setForeground(new java.awt.Color(255, 244, 204));
        lab_txt.setText("Lab : " + comp.getLab_name());

        seat_txt.setBackground(new java.awt.Color(255, 244, 204));
        seat_txt.setForeground(new java.awt.Color(255, 244, 204));
        seat_txt.setText("Seat : " + comp.getComp_id());

        name_id.setBackground(new java.awt.Color(255, 244, 204));
        name_id.setForeground(new java.awt.Color(255, 244, 204));
        name_id.setText(comp.getName() + "(" + comp.getStd_id() + ")");

        javax.swing.GroupLayout info_p1Layout = new javax.swing.GroupLayout(info_p);
        info_p.setLayout(info_p1Layout);
        info_p1Layout.setHorizontalGroup(
                info_p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(info_p1Layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addComponent(image_status)
                                .addGap(18, 18, 18)
                                .addGroup(info_p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lab_txt)
                                        .addComponent(seat_txt)
                                        .addComponent(name_id))
                                .addContainerGap(53, Short.MAX_VALUE))
        );
        info_p1Layout.setVerticalGroup(
                info_p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(info_p1Layout.createSequentialGroup()
                                .addComponent(seat_txt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lab_txt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(name_id))
                        .addGroup(info_p1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(image_status))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(info_p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(info_p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }

    public javax.swing.JLabel getImage_status() {
        return image_status;
    }
    public void setComputer(Computer comp) {
        this.comp = comp;
    }

    public void setImage_status(javax.swing.JLabel image_status) {
        this.image_status = image_status;
    }

    public javax.swing.JPanel getInfo_p() {
        return info_p;
    }

    public void setInfo_p(javax.swing.JPanel info_p) {
        this.info_p = info_p;
    }

    public javax.swing.JLabel getLab_txt() {
        return lab_txt;
    }

    public void setLab_txt(javax.swing.JLabel lab_txt) {
        this.lab_txt = lab_txt;
    }

    public javax.swing.JLabel getName_id() {
        return name_id;
    }

    public void setName_id(javax.swing.JLabel name_id) {
        this.name_id = name_id;
    }

    public javax.swing.JLabel getSeat_txt() {
        return seat_txt;
    }

    public void setSeat_txt(javax.swing.JLabel seat_txt) {
        this.seat_txt = seat_txt;
    }

    private javax.swing.JLabel image_status;
    private javax.swing.JPanel info_p;
    private javax.swing.JLabel lab_txt;
    private javax.swing.JLabel name_id;
    private javax.swing.JLabel seat_txt;
    private Computer comp;

    @Override
    public void updateButtonIcon() {
        if (comp.getStatus() == 0) {
            image_status.setIcon(new ImageIcon(getClass().getResource("/Image/empty.png")));
        } else if (comp.getStatus() == 1){
            image_status.setIcon(new ImageIcon("OOP/src/Image/wait.png"));
        } else if (comp.getStatus() == 2) {
            image_status.setIcon(new ImageIcon(getClass().getResource("/Image/check.png")));
        }
    }

    @Override
    public void updateGUI() {
        lab_txt.setText("Lab : " + comp.getLab_name());
        seat_txt.setText("Seat : " + comp.getComp_id());
        name_id.setText(comp.getName() + "(" + comp.getStd_id() + ")");
    }

    @Override
    public void dataFetcher() {

    }
}

